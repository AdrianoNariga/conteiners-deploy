#!/bin/bash
# funcao de descoberta do sistema operacional
# get_so -s (retorna o sistema operasional)
# get_so -v (versao do sistema)
get_so(){
        while test -n "$1"
        do
        case $1 in
                -s | --operatingsystem)
                        grep PRETTY_NAME= /etc/os-release | cut -d \" -f 2 | awk '{print $1}'
                ;;
                -v | --version)
                        grep VERSION_ID= /etc/os-release | cut -d \" -f2
                ;;
                *) echo "opcao invalida"
        esac
        shift
        done
}

if_centos(){
	yum install -y yum-utils lvm2 \
		device-mapper-persistent-data

	yum-config-manager --add-repo \
		https://download.docker.com/linux/centos/docker-ce.repo

	yum-config-manager --enable docker-ce-edge
	yum install docker-ce -y
}

if_rhel(){
	subscription-manager repos --enable=rhel-7-server-extras-rpms
	yum install docker -y
}

if_ubuntu(){
	apt-get install apt-transport-https ca-certificates -y
	apt-key adv --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys 58118E89F3A912897C070ADBF76221572C52609D
	if [ `get_so -v` = "15.10" ] ; then
		echo "deb https://apt.dockerproject.org/repo ubuntu-wily main" > /etc/apt/sources.list.d/docker.list
	elif [ `get_so -v` = "16.04" ] || [ `get_so -v` = "0.4" ] ; then
		echo "deb https://apt.dockerproject.org/repo ubuntu-xenial main" > /etc/apt/sources.list.d/docker.list
	fi

	apt-get update
	apt-get purge lxc-docker -y
	apt-get install docker-engine -y
}

case `get_so -s` in
	Ubuntu|elementary) if_ubuntu ;;
	CentOS) if_centos ;;
	Red) if_rhel ;;
esac

systemctl enable docker
systemctl restart docker
groupadd docker
echo "gpasswd -a nariga docker"
